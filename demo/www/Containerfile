# /www/Containerfile
# The definitive, simplified, workspace-aware Docker build file.
# The build context MUST be the project root directory.

# =================================================================
# STAGE 1: Base with OS dependencies
# =================================================================
FROM oven/bun:1-slim AS base
LABEL project="pfp2e-demo" stage="base"
WORKDIR /app
# Install curl for healthcheck
USER root
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*
USER bun

# =================================================================
# STAGE 2: Dependencies (Strict & Reproducible)
# =================================================================
FROM base AS deps
LABEL project="pfp2e-demo" stage="deps"
WORKDIR /app/www
COPY www/package.json www/bun.lock ./
RUN bun install --frozen-lockfile

# =================================================================
# STAGE 3: Build the `www` Application
# =================================================================
FROM deps AS build
LABEL project="pfp2e-demo" stage="build"
WORKDIR /app
# Copy source code last to leverage caching
COPY www ./www
WORKDIR /app/www
RUN bun run build

# =================================================================
# STAGE 4: Final Production Image
# =================================================================
FROM base AS prod-server
LABEL project="pfp2e-demo" stage="prod-server"
WORKDIR /app/www
ENV NODE_ENV=production
COPY --from=deps /app/www/node_modules ./node_modules
COPY --from=build /app/www/.next ./.next
COPY --from=build /app/www/public ./public
COPY --from=build /app/www/package.json .
EXPOSE 3000
HEALTHCHECK CMD curl -f http://localhost:3000/ || exit 1
CMD ["bun", "run", "start"]

# =================================================================
# STAGE 5: Final Test Runner Image
# =================================================================
FROM mcr.microsoft.com/playwright:v1.53.1-noble AS test-runner
LABEL project="pfp2e-demo" stage="test-runner"
WORKDIR /app/www
COPY --from=deps /app/www/node_modules ./node_modules
COPY --from=deps /usr/local/bin/bun /usr/local/bin/bun
# Copy only necessary files for testing
COPY www/tests-ui ./tests-ui
COPY www/playwright.config.ts .
# The test command is run from compose against the prod service.
CMD ["bun", "run", "test:ui"]
